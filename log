In file included from include/omniunit/classes/Complete_Unit.hh:37:0,
                 from include/omniunit/omniunit.hh:50,
                 from src/main.cpp:3:
include/omniunit/classes/Basic_Unit.hh: In instantiation of 'constexpr omni::Basic_Unit<_Dimension, Rep, Period, Origin>::Basic_Unit(const std::chrono::duration<_Rep, _Period>&) [with _Rep = long long int; _Period = std::ratio<1, 1000000000>; _Dimension = omni::Dimension<0, 0, 1, 0, 0, 0, 0>; Rep = long long int; Period = omni::Ratio<omni::E0, omni::E0>; const double& Origin = omni::zero]':
include/omniunit/classes/Basic_Unit.hh:173:10:   required from 'constexpr toUnit omni::unit_cast_impl(omni::partial_specialization_emulator<omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, typename toUnit::rep, typename toUnit::period, toUnit:: origin> >, const std::chrono::duration<_Rep, _Period>&) [with toUnit = omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::E0, omni::E0>, omni::zero>; Rep = long long int; Period = std::ratio<1, 1000000000>; typename toUnit::period = omni::Ratio<omni::E0, omni::E0>; typename toUnit::rep = long long int]'
include/omniunit/classes/Basic_Unit.hh:192:32:   required from 'constexpr toUnit omni::unit_cast(const std::chrono::duration<_Rep, _Period>&) [with toUnit = omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::E0, omni::E0>, omni::zero>; Rep = long long int; Period = std::ratio<1, 1000000000>]'
include/omniunit/chronoscale.hh:125:41:   required from 'durationType omni::Timer::get() const [with durationType = omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::E0, omni::E0>, omni::zero>]'
src/main.cpp:340:22:   required from here
include/omniunit/classes/Basic_Unit.hh:252:102: error: no matching function for call to 'omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::E0, omni::E0>, omni::zero>::Basic_Unit(omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::Ratio_std_to_omni<std::ratio<1, 1000000000> >::num, omni::Ratio_std_to_omni<std::ratio<1, 1000000000> >::den>, omni::zero>, int)'
   Basic_Unit(Basic_Unit<dim, _Rep, typename Ratio_std_to_omni<_Period>::type, Origin>(Obj.count()), 0)
                                                                                                      ^
include/omniunit/classes/Basic_Unit.hh:251:13: note: candidate: template<class _Rep, class _Period> constexpr omni::Basic_Unit<_Dimension, Rep, Period, Origin>::Basic_Unit(const std::chrono::duration<_Rep, _Period>&)
   constexpr Basic_Unit(std::chrono::duration<_Rep, _Period> const& Obj):
             ^~~~~~~~~~
include/omniunit/classes/Basic_Unit.hh:251:13: note:   template argument deduction/substitution failed:
include/omniunit/classes/Basic_Unit.hh:252:102: note:   'omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::Ratio_std_to_omni<std::ratio<1, 1000000000> >::num, omni::Ratio_std_to_omni<std::ratio<1, 1000000000> >::den>, omni::zero>' is not derived from 'const std::chrono::duration<_Rep1, _Period1>'
   Basic_Unit(Basic_Unit<dim, _Rep, typename Ratio_std_to_omni<_Period>::type, Origin>(Obj.count()), 0)
                                                                                                      ^
include/omniunit/classes/Basic_Unit.hh:244:13: note: candidate: template<class _Rep, class _Period, const double& _Origin> constexpr omni::Basic_Unit<_Dimension, Rep, Period, Origin>::Basic_Unit(const omni::Basic_Unit<_Dimension, _Rep, _Period, _Origin>&)
   constexpr Basic_Unit(Basic_Unit<dim, _Rep, _Period, _Origin> const& Obj):
             ^~~~~~~~~~
include/omniunit/classes/Basic_Unit.hh:244:13: note:   template argument deduction/substitution failed:
include/omniunit/classes/Basic_Unit.hh:252:102: note:   candidate expects 1 argument, 2 provided
   Basic_Unit(Basic_Unit<dim, _Rep, typename Ratio_std_to_omni<_Period>::type, Origin>(Obj.count()), 0)
                                                                                                      ^
include/omniunit/classes/Basic_Unit.hh:237:13: note: candidate: template<class _RepC, class _RepU, class> constexpr omni::Basic_Unit<_Dimension, Rep, Period, Origin>::Basic_Unit(const _RepC&, const _RepU&)
   constexpr Basic_Unit(_RepC const& countArg, _RepU const& uncertaintyArg):
             ^~~~~~~~~~
include/omniunit/classes/Basic_Unit.hh:237:13: note:   template argument deduction/substitution failed:
include/omniunit/classes/Basic_Unit.hh:236:44: error: no type named 'type' in 'struct std::enable_if<false, omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::Ratio_std_to_omni<std::ratio<1, 1000000000> >::num, omni::Ratio_std_to_omni<std::ratio<1, 1000000000> >::den>, omni::zero> >'
   template<typename _RepC, typename _RepU, typename = typename std::enable_if<(std::is_arithmetic<_RepC>::value && std::is_arithmetic<_RepU>::value), _RepC>::type>
                                            ^~~~~~~~
include/omniunit/classes/Basic_Unit.hh:230:13: note: candidate: template<class _Rep, class> constexpr omni::Basic_Unit<_Dimension, Rep, Period, Origin>::Basic_Unit(const _Rep&)
   constexpr Basic_Unit(_Rep const& countArg):
             ^~~~~~~~~~
include/omniunit/classes/Basic_Unit.hh:230:13: note:   template argument deduction/substitution failed:
include/omniunit/classes/Basic_Unit.hh:252:102: note:   candidate expects 1 argument, 2 provided
   Basic_Unit(Basic_Unit<dim, _Rep, typename Ratio_std_to_omni<_Period>::type, Origin>(Obj.count()), 0)
                                                                                                      ^
include/omniunit/classes/Basic_Unit.hh:223:13: note: candidate: constexpr omni::Basic_Unit<_Dimension, Rep, Period, Origin>::Basic_Unit() [with _Dimension = omni::Dimension<0, 0, 1, 0, 0, 0, 0>; Rep = long long int; Period = omni::Ratio<omni::E0, omni::E0>; const double& Origin = omni::zero]
   constexpr Basic_Unit():
             ^~~~~~~~~~
include/omniunit/classes/Basic_Unit.hh:223:13: note:   candidate expects 0 arguments, 2 provided
include/omniunit/classes/Basic_Unit.hh:210:7: note: candidate: constexpr omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::E0, omni::E0>, omni::zero>::Basic_Unit(const omni::Basic_Unit<omni::Dimension<0, 0, 1, 0, 0, 0, 0>, long long int, omni::Ratio<omni::E0, omni::E0>, omni::zero>&)
 class Basic_Unit
       ^~~~~~~~~~
include/omniunit/classes/Basic_Unit.hh:210:7: note:   candidate expects 1 argument, 2 provided
